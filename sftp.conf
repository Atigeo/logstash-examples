input {
        file {
                path => "/var/log/sftp.log"
                type => "sftp"
        }
}

filter {
  if [type] == 'sftp' {

    grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: session opened for local user %{USERNAME:user} from \[%{IP:clientip}\]" ]
      add_tag => "session_opened"
      add_tag => "sftp"
      tag_on_failure => []
    }

    grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: session closed for local user %{USERNAME:user} from \[%{IP:clientip}\]" ]
      add_tag => "session closed"
      add_tag => "sftp"
      tag_on_failure => []
    }

   grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: opendir \"%{PATH:sftp_path}\"" ]
      add_tag => "opendir"
      add_tag => "sftp"
      tag_on_failure => []
    }


   grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: closedir \"%{PATH:sftp_path}\"" ]
      add_tag => "closedir"
      add_tag => "sftp"
      tag_on_failure => []
    }


   grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: mkdir name \"%{PATH:sftp_path}\" mode %{NUMBER:permissions}" ]
      add_tag => "mkdir"
      add_tag => "sftp"
      tag_on_failure => []
    }

   grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: open \"%{PATH:sftp_path}\" flags READ mode %{NUMBER:permissions}" ]
      add_tag => "start_download"
      add_tag => "sftp"
      tag_on_failure => []
    }

   grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: open \"%{PATH:sftp_path}\" flags WRITE,CREATE,TRUNCATE mode %{NUMBER:permissions}" ]
      add_tag => "start_upload"
      add_tag => "sftp"
      tag_on_failure => []
    }

   grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: close \"%{PATH:sftp_path}\" bytes read %{NUMBER:read_bytes} written %{NUMBER:write_bytes}" ]
      add_tag => "finish_transfer"
      add_tag => "sftp"
      tag_on_failure => []
    }

   grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: remove name \"%{PATH:sftp_path}\"" ]
      add_tag => "delete_file"
      add_tag => "sftp"
      tag_on_failure => []
    }

    grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} internal-sftp\[%{BASE10NUM:pid}\]: rmdir name \"%{PATH:sftp_path}\"" ]
      add_tag => "delete_dir"
      add_tag => "sftp"
      tag_on_failure => []
    }
  }
}

output {
  elasticsearch { hosts => ["localhost:9200"] }
  stdout { codec => rubydebug }
}
